{% extends "admin/base.html.twig" %}

{% block title %}{{ 'Agroecological Practice' | trans }}{% endblock %}

{% block top_content %}
    {% embed ':_partial:breadcrumb.html.twig' %}
        {% block breadcrumb %}{{ 'Agroecological Practice' | trans }}{% endblock %}
    {% endembed %}
{% endblock %}

{% block content %}
    <div class="col-md-12">
        {% include ':agroindustrial_practice:form_content.html.twig' %}
    </div>
{% endblock %}

{% block extra_css %}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.min.css">

    <!-- Include Editor style. -->
    <link href="{{ asset('assets/froala_editor/css/froala_editor.pkgd.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/froala_editor/css/froala_style.min.css') }}" rel="stylesheet" type="text/css"/>
    <style>
        #map-canvas {
            height: 400px;
            width: 100%;
        }

        .controls {
            margin-top: 10px;
            border: 1px solid transparent;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            height: 32px;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        }

        #search-address {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 300px;
        }

        #search-address:focus {
            border-color: #4d90fe;
        }

        .form-group {
            margin-top: 30px;
        }
    </style>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.min.css">

    <!-- Include Editor style. -->
    <link href="{{ asset('assets/froala_editor/css/froala_editor.pkgd.min.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('assets/froala_editor/css/froala_style.min.css') }}" rel="stylesheet" type="text/css"/>
    <link rel="stylesheet" href="{{ asset('assets/css/wizard.css') }}">

{% endblock %}

{% block extra_js %}
    <!-- Include external JS libs. -->
    <script type="text/javascript"
            src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/codemirror.min.js"></script>
    <script type="text/javascript"
            src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.3.0/mode/xml/xml.min.js"></script>

    <!-- Include JS files. -->
    <script type="text/javascript" src="{{ asset('assets/froala_editor/js/froala_editor.pkgd.min.js') }}"></script>

    <!-- Include Language file if we want to use it. -->
    <script type="text/javascript" src="{{ asset('assets/froala_editor/js/languages/es.js') }}"></script>

    <!-- Initialize the editor. -->
    <script>

        var map;
        var markers = [];


        function initialize() {
            map = new google.maps.Map(document.getElementById('map-canvas'), {
                center: {lat: 0, lng: 0},
                zoom: 4,

                mapTypeId: google.maps.MapTypeId.ROADMAP
            });


            // Create the search box and link it to the UI element.
            var input = document.getElementById('search-address');

            var lat = {{ entity.address ? entity.address.latitude : 0 }};
            var lng = {{ entity.address ? entity.address.longitude : 0 }};

            var myLatLng = new google.maps.LatLng( lat, lng);
            marker = new google.maps.Marker( {position: myLatLng, map: map, draggable: true } );

            google.maps.event.addListener(marker, 'dragend', function (event) {
                document.getElementById("lat").value = this.getPosition().lat();
                document.getElementById("lng").value = this.getPosition().lng();
            });
            marker.setMap( map );
            map.setCenter(marker.getPosition());

            var searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            // Bias the SearchBox results towards current map's viewport.
            map.addListener('bounds_changed', function() {
                searchBox.setBounds(map.getBounds());
            });


            searchBox.addListener('places_changed', function() {
                var places = searchBox.getPlaces();
                console.log(places[0].geometry);
                document.getElementById("lat").value = places[0].geometry.viewport.f.b;
                document.getElementById("lng").value = places[0].geometry.viewport.b.b;
                console.log("auto complete lat->",places[0].geometry.viewport.f.b);
                console.log("auto complete long->",places[0].geometry.viewport.b.b);
                if (places.length == 0) {
                    return;
                }

                // Clear out the old markers.
                markers.forEach(function(marker) {
                    marker.setMap(null);
                });
                markers = [];

                // For each place, get the icon, name and location.
                var bounds = new google.maps.LatLngBounds();
                places.forEach(function(place) {
                    var icon = {
                        url: place.icon,
                        size: new google.maps.Size(71, 71),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(25, 25)
                    };

                    var marker = new google.maps.Marker({
                        map: map,
                        title: place.name,
                        position: place.geometry.location,
                        draggable: true,
                    });
                    // Create a marker for each place.
                    markers.push(marker);

                    google.maps.event.addListener(marker, 'dragend', function (event) {
                        document.getElementById("lat").value = this.getPosition().lat();
                        document.getElementById("lng").value = this.getPosition().lng();
                        console.log("lat->",this.getPosition().lat());
                        console.log("long->",this.getPosition().lng());
                    });

                    if (place.geometry.viewport) {
                        // Only geocodes have viewport.
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }
                });
                map.fitBounds(bounds);
            });
        }

        $(function () {
            $('#type_practice').change(function () {
                $('.type').hide();
                //$('[id*="'+$(this).val()+'"]').prop('required',true);                
                $('#' + $(this).val()).show();
            });
        });

        $(document).ready(function () {
            initialize();

            if ($("#productive_undertaking_id").val()) $("#type_practice option[value='productive_undertaking']").attr('selected', 'selected');
            if ($("#marketing_spaces_id").val()) $("#type_practice option[value='marketing_spaces']").attr('selected', 'selected');
            if ($("#professional_services_id").val()) $("#type_practice option[value='professional_services']").attr('selected', 'selected');
            if ($("#institutional_project_id").val()) $("#type_practice option[value='institutional_project']").attr('selected', 'selected');
            if ($("#promotion_group_id").val()) $("#type_practice option[value='promotion_group']").attr('selected', 'selected');

            $('.type').hide();
            if ($("#type_practice").val()) {
                $('#' + $("#type_practice").val()).show();
            }

            $("#add-member").click(function (e) {
                e.preventDefault();
                var numberOfMember = $("#producer-form").find("input[name^='data[member]']").length;
                var label = '<label class="col-md-4 form-control-label"  for="data[member][' + numberOfMember + ']">Integrante </label> ';
                var input = '<div class="col-md-6"><input  class="form-control" type="text" name="data[member][' + numberOfMember + ']" id="data[member][' + numberOfMember + ']" /></div>';
                var removeButton = '<button class="btn btn-danger remove-member">Quitar</button>';
                var html = "<div class='form-group members'>" + label + input + removeButton + "</div>";
                $("#producer-form").find("#add-member").before(html);
            });

            $("#add-institution").click(function (e) {
                e.preventDefault();
                var n = $("#producer-form").find("input[name^='data[related_institution]']").length;
                var label = '<label class="col-md-4 form-control-label"  for="data[related_institution][' + n + ']">Instituci√≥n </label> ';
                var input = '<div class="col-md-6"><input  class="form-control" type="text" name="data[related_institution][' + n + ']" id="data[related_institution][' + n + ']" /></div>';
                var removeButton = '<button class="btn btn-danger remove-institution">Quitar</button>';
                var html = "<div class='form-group institutions'>" + label + input + removeButton + "</div>";
                $("#producer-form").find("#add-institution").before(html);
            });

            if ($("#member_id").val()) {
                var member_json = JSON.parse($("#member_id").val());
                for (var i = 0; i < member_json.length; i++) {
                    if (i === 0) {
                        $("input[name='data[member][0]'").val(member_json[0]);
                    }
                    else {
                        var label = '<label class="col-md-4 form-control-label"  for="data[member][' + i + ']">Integrante </label> ';
                        var input = '<div class="col-md-6"><input  class="form-control" type="text" name="data[member][' + i + ']" id="data[member][' + i + ']" value="' + member_json[i] + '" /></div>';
                        var removeButton = '<button class="btn btn-danger remove-member">Quitar</button>';
                        var html = "<div class='form-group members'>" + label + input + removeButton + "</div>";
                        $("#producer-form").find("#add-member").before(html);
                    }
                }
            }

            if ($("#related_institution_id").val()) {
                var related_institution_json = JSON.parse($("#related_institution_id").val());
                for (var i = 0; i < related_institution_json.length; i++) {
                    if (i === 0) {
                        $("input[name='data[related_institution][0]'").val(related_institution_json[0]);
                    }
                    else {
                        var label = '<label class="col-md-4 form-control-label"  for="data[related_institution][' + i + ']">Instituci√≥n </label> ';
                        var input = '<div class="col-md-6"><input class="form-control" type="text" name="data[related_institution][' + i + ']" id="data[related_institution][' + i + ']" value="' + related_institution_json[i] + '" /></div>';
                        var removeButton = '<button class="btn btn-danger remove-institution">Quitar</button>';
                        var html = "<div class='form-group institutions'>" + label + input + removeButton + "</div>";
                        $("#producer-form").find("#add-institution").before(html);
                    }
                }
            }

            $('#appbundle_agroecologicalpractice_productive_undertaking_type').children().remove();
                loadProductionType();
            $('#appbundle_agroecologicalpractice_productive_undertaking_category').change(function () {
                loadProductionType();
            });

            $('#appbundle_agroecologicalpractice_region').children().not(':first').remove();
            $('#appbundle_agroecologicalpractice_city').children().not(':first').remove();

            $('#appbundle_agroecologicalpractice_country').change(function () {
                loadRegion();
            });
            $('#appbundle_agroecologicalpractice_region').change(function () {
                loadCity();
            });

            if ($("#country_id").val() != '') {
                loadRegion();
            }
        });

        $(document).on("click", ".remove-member", function (e) {
            e.preventDefault();
            $(this).parents(".members").remove();
            //update labels
            $("#producer-form").find("label[for^='data[member]']").each(function () {
                $(this).html("Integrante");
            });
        });
        $(document).on("click", ".remove-institution", function (e) {
            e.preventDefault();
            $(this).parents(".institutions").remove();
            //update labels
            $("#producer-form").find("label[for^='data[related_institution]']").each(function () {
                $(this).html("Instituci√≥n");
            });
        });

        var typeSelected = "{{ practiceTypeId is defined ?  practiceTypeId : 0}}";

        function loadProductionType() {
            $('#appbundle_agroecologicalpractice_productive_undertaking_type').children().remove();
            var production_category = $('#appbundle_agroecologicalpractice_productive_undertaking_category').find(':selected').val();
            $.ajax({
                type: "GET",
                url: "{{ path('homepage') }}production_type/" + production_category
            }).done(function (result) {
                var data = eval(result);
                for (var i = 0; i < data.length; i++) {
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    if (data[i].id == typeSelected) {
                        newOption.attr('selected', 'selected');
                    }
                    $('#appbundle_agroecologicalpractice_productive_undertaking_type').append(newOption)
                }
            });
        }


        function loadRegion() {
            $('#appbundle_agroecologicalpractice_region').children().not(':first').remove();
            $('#appbundle_agroecologicalpractice_city').children().not(':first').remove();
            var country = $('#appbundle_agroecologicalpractice_country').find(':selected').val();
            $.ajax({
                type: "GET",
                url: "{{ path('homepage') }}region/" + country
            }).done(function (result) {
                var data = eval(result);
                var regionselected = $('#region_id').val();

                for (var i = 0; i < data.length; i++) {
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    if (data[i].id == regionselected) {
                        newOption.attr('selected', 'selected');
                    }
                    $('#appbundle_agroecologicalpractice_region').append(newOption)
                }
                if (regionselected) {
                    loadCity();
                }

            });
        }

        function loadCity() {
            $('#appbundle_agroecologicalpractice_city').children().not(':first').remove();
            var region = $('#appbundle_agroecologicalpractice_region').find(':selected').val();
            $.ajax({
                type: "GET",
                url: "{{ path('homepage') }}city/" + region
            }).done(function (result) {
                var data = eval(result);
                if (!data.length) {
                    $("#appbundle_agroecologicalpractice_city").hide();
                    $("#appbundle_agroecologicalpractice_city_name").show();
                    $("#appbundle_agroecologicalpractice_city").removeAttr('required');
                    $("#appbundle_agroecologicalpractice_city_name").attr('required', 'required');
                } else {
                    var cityselected = $('#city_id').val();

                    for (var i = 0; i < data.length; i++) {
                        var newOption = $('<option/>');
                        newOption.text(data[i].name);
                        newOption.attr('value', data[i].id);
                        if (data[i].id == cityselected) {
                            newOption.attr('selected', 'selected');
                        }
                        $('#appbundle_agroecologicalpractice_city').append(newOption)
                    }
                    $("#appbundle_agroecologicalpractice_city_name").hide();
                    $("#appbundle_agroecologicalpractice_city").show();
                    $("#appbundle_agroecologicalpractice_city_name").removeAttr('required');
                    $("#appbundle_agroecologicalpractice_city").attr('required', 'required');

                }
            });
        }


    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCt1dtSkxqSIbtWoF-DfeUTZb906mihfh4&libraries=places&callback=initialize"></script>
{% endblock %}