<div class="card">
    <form method="POST" action="{{ path('user_edit', {'id': entity.id }) }}" {{ form_enctype(form) }} class="form-horizontal" id="contact-form">
        <div class="card-block">
            <div class="stepwizard col-md-offset-3">
                <div class="stepwizard-row setup-panel">
                    <div class="stepwizard-step">
                        <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                        <p>{{ 'Step' | trans }} 1</p>
                    </div>
                    <div class="stepwizard-step">
                        <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                        <p>{{ 'Step' | trans }} 2</p>
                    </div>
                    <div class="stepwizard-step">
                        <a href="#step-3" type="button" class="btn btn-default btn-circle" disabled="disabled">3</a>
                        <p>{{ 'Step' | trans }} 3</p>
                    </div>
                    <div class="stepwizard-step">
                        <a href="#step-4" type="button" class="btn btn-default btn-circle" disabled="disabled">4</a>
                        <p>{{ 'Step' | trans }} 4</p>
                    </div>
                    <div class="stepwizard-step">
                        <a href="#step-5" type="button" class="btn btn-default btn-circle" disabled="disabled">5</a>
                        <p>{{ 'Step' | trans }} 5</p>
                    </div>
                    <div class="stepwizard-step">
                        <a href="#step-6" type="button" class="btn btn-default btn-circle" disabled="disabled">6</a>
                        <p>{{ 'Step' | trans }} 6</p>
                    </div>
                </div>
            </div>

            {% include '@FOSUser/Profile/wizard/step1.html.twig' %}
            {% include '@FOSUser/Profile/wizard/step2.html.twig' %}
            {% include '@FOSUser/Profile/wizard/step3.html.twig' %}
            {% include '@FOSUser/Profile/wizard/step4.html.twig' %}
            {% include '@FOSUser/Profile/wizard/step5.html.twig' %}
            {% include '@FOSUser/Profile/wizard/step6.html.twig' %}
        </div>
        {{ form_rest(form) }}
    </form>
</div>

{% block extra_css %}
    <style>
    .col-centered{
        margin-left: auto;
        margin-right: auto;
        float: none;
    }
    .stepwizard-step p {
    margin-top: 10px;
    }
    .stepwizard-row {
    display: table-row;
    }
    .stepwizard {
    display: table;
    width: 100%;
    position: relative;
    }
    .stepwizard-step button[disabled] {
    opacity: 1 !important;
    filter: alpha(opacity=100) !important;
    }
    .stepwizard-row:before {
    top: 14px;
    bottom: 0;
    position: absolute;
    content: " ";
    width: 100%;
    height: 1px;
    background-color: #ccc;
    z-order: 0;
    }
    .stepwizard-step {
    display: table-cell;
    text-align: center;
    position: relative;
    }
    .btn-circle {
    width: 30px;
    height: 30px;
    text-align: center;
    padding: 6px 0;
    font-size: 12px;
    line-height: 1.428571429;
    border-radius: 15px;
    }
    .form-group.has-error {
        color: #a94442;
    }
    </style>
{% endblock %}
{% block extra_js %}

    <script>
        function initialize() {
            var map = new google.maps.Map(document.getElementById('map-canvas'), {
                center: {lat: {{ profile.address ? profile.address.latitude : 0 }}, lng: {{ profile.address ? profile.address.longitude : 0 }}},
                zoom: 4,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            // Create the search box and link it to the UI element.
            var input = document.getElementById('search-address');
            var myLatLng = new google.maps.LatLng( {{ profile.address ? profile.address.latitude : 0 }}, {{ profile.address ? profile.address.longitude : 0 }} );
            marker = new google.maps.Marker( {position: myLatLng, map: map, draggable: true } );
            google.maps.event.addListener(marker, 'dragend', function (event) {
                document.getElementById("lat").value = this.getPosition().lat();
                document.getElementById("lng").value = this.getPosition().lng();
                console.log("lat->",this.getPosition().lat());
                console.log("long->",this.getPosition().lng());
            });
            marker.setMap( map );

            var searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            // Bias the SearchBox results towards current map's viewport.
            map.addListener('bounds_changed', function() {
                searchBox.setBounds(map.getBounds());
            });

            var markers = [];
            // [START region_getplaces]
            // Listen for the event fired when the user selects a prediction and retrieve
            // more details for that place.
            searchBox.addListener('places_changed', function() {
                var places = searchBox.getPlaces();

                if (places.length == 0) {
                    return;
                }

                // Clear out the old markers.
                markers.forEach(function(marker) {
                    marker.setMap(null);
                });
                markers = [];

                // For each place, get the icon, name and location.
                var bounds = new google.maps.LatLngBounds();
                places.forEach(function(place) {
                    var icon = {
                        url: place.icon,
                        size: new google.maps.Size(71, 71),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(25, 25)
                    };

                    var marker = new google.maps.Marker({
                        map: map,
                        title: place.name,
                        position: place.geometry.location,
                        draggable: true,
                    });
                    // Create a marker for each place.
                    markers.push(marker);

                    google.maps.event.addListener(marker, 'dragend', function (event) {
                        document.getElementById("lat").value = this.getPosition().lat();
                        document.getElementById("lng").value = this.getPosition().lng();
                        console.log("lat->",this.getPosition().lat());
                        console.log("long->",this.getPosition().lng());
                    });

                    if (place.geometry.viewport) {
                        // Only geocodes have viewport.
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }
                });
                map.fitBounds(bounds);
            });
            // [END region_getplaces]
        }
    </script>
    <script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.7/jquery.validate.min.js"></script>

    <script>
        $(document).ready(function () {
            var navListItems = $('div.setup-panel div a'),
                    allWells = $('.setup-content'),
                    allNextBtn = $('.nextBtn');

            allWells.hide();

            navListItems.click(function (e) {
                e.preventDefault();
                var $target = $($(this).attr('href')),
                        $item = $(this);

                if (!$item.hasClass('disabled')) {
                    navListItems.removeClass('btn-primary').addClass('btn-default');
                    $item.addClass('btn-primary');
                    allWells.hide();
                    $target.show();
                    $target.find('input:eq(0)').focus();
                }
            });

            allNextBtn.click(function(){
                var curStep = $(this).closest(".setup-content"),
                        curStepBtn = curStep.attr("id"),
                        nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                        curInputs = curStep.find("input[type='text'],input[type='url'],select"),
                        isValid = true;

                $(".form-group").removeClass("has-error");
                for(var i=0; i<curInputs.length; i++){
                    if (!curInputs[i].validity.valid){
                        isValid = false;
                        $(curInputs[i]).closest(".form-group").addClass("has-error");
                    }
                }
                console.log('valid',isValid);
                if (isValid)
                    nextStepWizard.removeAttr('disabled').trigger('click');
            });

            $('div.setup-panel div a.btn-primary').trigger('click');

            $('#contact-form').validate({
                rules: {
                    appbundle_user_first_name: {
                        minlength: 2,
                        required: true
                    },
                },
                highlight: function (element) {
                    $(element).closest('.control-group').removeClass('success').addClass('error');
                },
                success: function (element) {
                    element.text('OK!').addClass('valid')
                            .closest('.control-group').removeClass('error').addClass('success');
                }
            });
        });
    </script>
    <script>
        $(document).ready(function(){
            $(window).keydown(function(event){
                if(event.keyCode == 13) {
                    event.preventDefault();
                    return false;
                }
            });
            $('#country').change(function(){
                loadRegion();
            });
            $('#region').change(function(){
                loadCity();
            });
            $('#country2').change(function(){
                loadRegion2();
            });
            $('#region2').change(function(){
                loadCity2();
            });
            $('#institution_type').change(function(){
                loadInstitution();
                $('#institution_label').show();
            });
            $('#knowledge_area').change(function(){
                loadKnowledge();
                $('#knowledge').show();
                $('#knowledge_label').show();
            });
            $('#topic_category').change(function(){
                loadStudyTopic();
                $('#study_topic').show();
                $('#study_topic_label').show();
            });

            $("#add_institution").click(function(){
                $("#other_institution").toggle();
                $("#institution").toggle();
                $(this).text($(this).text() == 'Agregar otra institución' ? 'Mostrar la lista de instituciones' : 'Agregar otra institución');
            })

            $("#add_city").click(function(){
                $("#other_city").toggle();
                $("#city").toggle();
                $(this).text($(this).text() == 'Agregar otra ciudad' ? 'Mostrar la lista de ciudades' : 'Agregar otra ciudad');
            })

            $("#add_city2").click(function(){
                $("#other_city2").toggle();
                $("#city2").toggle();
                $(this).text($(this).text() == 'Agregar otra ciudad' ? 'Mostrar la lista de ciudades' : 'Agregar otra ciudad');
            })
        });

        function loadCountry(){
            $.ajax({
                type: "GET",
                url: "{{ path('country_list') }}"
            }).done(function( result ) {
                var data = eval(result);
                for(var i = 0; i < data.length; i++){
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    $('#country').append(newOption);
                    var selected = {{ profile.residencePlace ? profile.residencePlace.region.country.id : 0 }};
                    if (selected == data[i].id){
                        newOption.attr('selected', 'true');
                    }
                }
                loadRegion();
            });
        }

        function loadRegion(){
            $("#region").children().remove();
            var country = $('#country').find(':selected').val();
            $.ajax({
                type: "GET",
                url: "{{ path('homepage')}}region/"+country
            }).done(function( result ) {
                var data = eval(result);
                for(var i = 0; i < data.length; i++){
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    $('#region').append(newOption);
                    var selected = {{ profile.residencePlace ? profile.residencePlace.region.id : 0 }};
                    if (selected == data[i].id){
                        newOption.attr('selected', 'true');
                    }
                }
                loadCity();
            });
        }

        function loadCity(){
            $("#city").children().remove();
            var region = $('#region').find(':selected').val();
            $.ajax({
                type: "GET",
                url: "{{ path('homepage')}}city/"+region
            }).done(function( result ) {
                var data = eval(result);
                if (!data.length){
                    $("#city").hide();
                    $("#other_city").show();
                    $("#add_city").hide();
                }else{
                    for(var i = 0; i < data.length; i++){
                        var newOption = $('<option/>');
                        newOption.text(data[i].name);
                        newOption.attr('value', data[i].id);
                        $('#city').append(newOption);
                        var selected = {{ profile.residencePlace ? profile.residencePlace.id : 0 }};
                        if (selected == data[i].id){
                            newOption.attr('selected', 'true');
                        }
                    }
                    $("#other_city").hide();
                    $("#city").show();
                    $("#add_city").show();
                }
            });
        }
        function loadCountry2(){
            $.ajax({
                type: "GET",
                url: "{{ path('country_list') }}"
            }).done(function( result ) {
                var data = eval(result);
                for(var i = 0; i < data.length; i++){
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    $('#country2').append(newOption);
                    var selected = {{ profile.researchPlace ? profile.researchPlace.region.country.id : 0 }};
                    if (selected == data[i].id){
                        newOption.attr('selected', 'true');
                    }
                }
                loadRegion2();
            });
        }

        function loadRegion2(){
            $("#region2").children().remove()
            var countryName = $('#country2 option:selected').text();
            if (countryName.toLowerCase() == 'argentina'){
                $('#label_city2').text('Conglomerados y ciudades');
            }else{
                $('#label_city2').text('Ciudad');
            }
            var country = $('#country2').find(':selected').val();
            $.ajax({
                type: "GET",
                url: "{{ path('homepage')}}region/"+country
            }).done(function( result ) {
                var data = eval(result);
                for(var i = 0; i < data.length; i++){
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    $('#region2').append(newOption);
                    var selected = {{ profile.researchPlace ? profile.researchPlace.region.id : 0 }};
                    if (selected == data[i].id){
                        newOption.attr('selected', 'true');
                    }
                }
                loadCity2();
            });
        }

        function loadCity2(){
            $("#city2").children().remove();
            var region = $('#region2').find(':selected').val();
            $.ajax({
                type: "GET",
                url: "{{ path('homepage')}}city/"+region
            }).done(function( result ) {
                var data = eval(result);
                  if (!data.length){
                    $("#city2").hide();
                    $("#other_city2").show();
                    $("#add_city2").hide();
                }else{
                    for(var i = 0; i < data.length; i++){
                        var newOption = $('<option/>');
                        newOption.text(data[i].name);
                        newOption.attr('value', data[i].id);
                        $('#city2').append(newOption);
                        var selected = {{ profile.researchPlace ? profile.researchPlace.id : 0 }};
                        if (selected == data[i].id){
                            newOption.attr('selected', 'true');
                        }
                    }
                    $("#other_city2").hide();
                    $("#city2").show();
                    $("#add_city2").show();
                }
            });
        }

        function loadInstitutionType(){
            $.ajax({
                type: "GET",
                url: "{{ path('institution_type_list') }}"
            }).done(function( result ) {
                var data = eval(result);
                for(var i = 0; i < data.length; i++){
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    $('#institution_type').append(newOption)
                    var selected = {{ profile.institution ? profile.institution.type.id : 0 }};
                    if (selected == data[i].id){
                        newOption.attr('selected', 'true');
                    }
                }
                loadInstitution()
                $('#institution_label').show();
            });
        }

        function loadInstitution(){
            $("#institution").children().remove()
            var institutionType = $('#institution_type').find(':selected').val();
            $.ajax({
                type: "GET",
                url: "{{ path('homepage')}}institution/"+institutionType
            }).done(function( result ) {
                var data = eval(result);
                if (!data.length){
                    $('#institution').hide();
                    $('#other_institution').show();
                    $('#add_institution').hide();

                }else{
                    for(var i = 0; i < data.length; i++){
                        var newOption = $('<option/>');
                        newOption.text(data[i].name);
                        newOption.attr('value', data[i].id);
                        $('#institution').append(newOption)
                    }
                    $('#other_institution').hide();
                    $('#institution').show();
                    $('#add_institution').show();
                }
            });
        }

        function loadKnowledgeArea(){
            $.ajax({
                type: "GET",
                url: "{{ path('knowledge_area_list') }}"
            }).done(function( result ) {
                var data = eval(result);
                for(var i = 0; i < data.length; i++){
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    $('#knowledge_area').append(newOption);
                    var selected = {{ profile.knowledge ? profile.knowledge.knowledgeArea.id : 0 }};
                    if (selected == data[i].id){
                        newOption.attr('selected', 'true');
                    }
                }
                loadKnowledge();
                $('#knowledge').show();
                $('#knowledge_label').show();
            });
        }

        function loadKnowledge(){
            $("#knowledge").children().remove()
            var knowledge_area = $('#knowledge_area').find(':selected').val();
            $.ajax({
                type: "GET",
                url: "{{ path('homepage')}}knowledge/"+knowledge_area
            }).done(function( result ) {
                var data = eval(result);
                for(var i = 0; i < data.length; i++){
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    $('#knowledge').append(newOption)
                }
            });
        }

        function loadTopicCategory(){
            $.ajax({
                type: "GET",
                url: "{{ path('topic_category_list') }}"
            }).done(function( result ) {
                var data = eval(result);
                for(var i = 0; i < data.length; i++){
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    $('#topic_category').append(newOption);
                    var selected = {{ profile.studyTopic ? profile.studyTopic.topicCategory.id : 0 }};
                    if (selected == data[i].id) {
                        newOption.attr('selected', 'true');
                    }
                }
                loadStudyTopic();
                $('#study_topic').show();
                $('#study_topic_label').show();
            });
        }

        function loadStudyTopic(){
            $('#study_topic').children().remove()
            var topic_category = $('#topic_category').find(':selected').val();
            $.ajax({
                type: "GET",
                url: "{{ path('homepage')}}study_topic/"+topic_category
            }).done(function( result ) {
                var data = eval(result);
                for(var i = 0; i < data.length; i++){
                    var newOption = $('<option/>');
                    newOption.text(data[i].name);
                    newOption.attr('value', data[i].id);
                    $('#study_topic').append(newOption)
                }
            });
        }

        loadCountry();
        loadCountry2();
        loadInstitutionType();
        loadKnowledgeArea();
        loadTopicCategory();
    </script>

    <script type="text/javascript" src="{{ asset('assets/froala_editor/js/froala_editor.pkgd.min.js') }}"></script>

    <!-- Include Language file if we want to use it. -->
    <script type="text/javascript" src="{{ asset('assets/froala_editor/js/languages/es.js') }}"></script>

    <!-- Initialize the editor. -->
    <script>
        $(function() {
            $('#summary').froalaEditor({
                height: 250
            })
        });
        $(function() {
            $('#graphic_information').froalaEditor({
                height: 250
            })
        });
    </script>

    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCt1dtSkxqSIbtWoF-DfeUTZb906mihfh4&libraries=places&callback=initialize"></script>
{% endblock %}